on:
  github:
    branches:
      only: main

jobs:
  CloneRepo:
    resources:
      instance-type: C5
    outputs:
     stylegan2:
        type: volume
    uses: git-checkout@v1
    with:
      # url: https://github.com/gradient-ai/stylegan2.git
      url: context.event.github.url
      ref: context.event.github.ref
  StyleGan2:
    resources:
      instance-type: P4000
    needs:
      - CloneRepo
    inputs:
      stylegan2: CloneRepo.outputs.stylegan2
    outputs:
      generatedFaces:
        type: dataset
        with:
          ref: demo-dataset
    uses: script@v1
    with:
      script: |-
        pip install scipy==1.3.3
        pip install requests==2.22.0
        pip install Pillow==6.2.1
         apt-get install sudo -y
        
        sudo apt-get install wget
        import random
        import string
        import time
        authtoken = 'YOUR_NGROK_AUTH_TOKEN'
        password = 'WHATEVER_YOU_WANT'
        public_key_path = 'LINK_TO_YOUR_PUBLIC_KEY'
        wget -q -c -nc https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
        unzip -qq -n ngrok-stable-linux-amd64.zip
        apt-get install -qq -o=Dpkg::Use-Pty=0 openssh-server pwgen > /dev/null
        echo root:$password | chpasswd
        mkdir /root/.ssh/
        wget -P /root/.ssh/ $public_key_path
        chmod 700 /root/.ssh
        chmod 600 /root/.ssh/authorized_keys
        mkdir -p /var/run/sshd
        echo "Protocol 2" >> /etc/ssh/sshd_config
        echo "PermitRootLogin yes" >> /etc/ssh/sshd_config
        echo "PasswordAuthentication no" >> /etc/ssh/sshd_config
        echo "TCPKeepAlive yes" >> /etc/ssh/sshd_config
        echo "X11Forwarding yes" >> /etc/ssh/sshd_config
        echo "X11DisplayOffset 10" >> /etc/ssh/sshd_config
        echo "AuthorizedKeysFile /root/.ssh/authorized_keys" >> /etc/ssh/sshd_config
        echo "PubkeyAuthentication yes" >> /etc/ssh/sshd_config
        echo "IgnoreRhosts yes" >> /etc/ssh/sshd_config
        echo "HostbasedAuthentication no" >> /etc/ssh/sshd_config
        echo "PrintLastLog yes" >> /etc/ssh/sshd_config
        echo "AcceptEnv LANG LC_*" >> /etc/ssh/sshd_config
        echo "LD_LIBRARY_PATH=/usr/lib64-nvidia" >> /root/.bashrc
        echo "export LD_LIBRARY_PATH" >> /root/.bashrc
        get_ipython().system_raw('/usr/sbin/sshd -D &')
        get_ipython().system_raw('./ngrok authtoken $authtoken && ./ngrok tcp 22 &')
        import os
        os.system("echo 'Root password: {}'".format(password))
        curl -s http://localhost:4040/api/tunnels | python3 -c \
            "import sys, json; print(json.load(sys.stdin)['tunnels'][0]['public_url'])"
        import requests, json
        url = json.loads(requests.get('http://localhost:4040/api/tunnels').text)['tunnels'][0]['public_url']
        os.system("echo '{}'".format(url))
        while True:
            time.sleep(10000)
           
        cd /inputs/stylegan2
        python run_generator.py generate-images \
          --network=gdrive:networks/stylegan2-ffhq-config-f.pkl \
          --seeds=6600-6605 \
          --truncation-psi=0.5 \
          --result-dir=/outputs/generatedFaces
      image: tensorflow/tensorflow:1.14.0-gpu-py3
